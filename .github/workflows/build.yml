# .github/workflows/cmake_build.yml

name: CMake Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            cmake_options: "-DRELEASE=ON"
            build_config: "Release"
          - os: windows-latest
            cmake_options: "-DRELEASE=ON"
            build_config: "Release"

    steps:
    # --- 체크아웃 단계 수정 ---
    - name: Checkout repository including submodules # 코드 체크아웃 (서브모듈 포함)
      uses: actions/checkout@v4
      with:
        submodules: recursive # 이 옵션을 추가하여 서브모듈(ImGui 등)을 함께 받아옵니다.

    # --- 의존성 설치 단계 (glfw3 포함) ---
    - name: Install prerequisites (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        # curl과 glfw3 개발 라이브러리 설치
        sudo apt-get install -y libcurl4-openssl-dev libglfw3-dev cmake build-essential

    - name: Install prerequisites (Windows)
      if: runner.os == 'Windows'
      run: |
        # choco로 curl 먼저 설치
        choco install curl --yes --force --ignore-checksums
        # choco로 glfw3 설치 시도 (수정됨)
        choco install glfw3 --yes --force --ignore-checksums

    # --- CMake 구성 및 빌드 단계는 동일 ---
    - name: Configure CMake
      run: |
        cmake -B build ${{ matrix.cmake_options }} -DCMAKE_BUILD_TYPE=${{ matrix.build_config }}

    - name: Build project
      run: cmake --build build --config ${{ matrix.build_config }}

    # ... (선택적 테스트 및 아티팩트 업로드 단계) ...

    - name: Upload artifact (Linux) # 빌드 결과물 업로드 (선택 사항, Linux/macOS)
      if: runner.os != 'Windows' && success() # 빌드 성공 시
      uses: actions/upload-artifact@v4
      with:
        name: MarketDAQ-${{ matrix.os }}
        path: build/MarketDAQ # 실제 실행 파일 경로 확인 필요

    - name: Upload artifact (Windows) # 빌드 결과물 업로드 (선택 사항, Windows)
      if: runner.os == 'Windows' && success() # 빌드 성공 시
      uses: actions/upload-artifact@v4
      with:
        name: MarketDAQ-${{ matrix.os }}
        # Windows에서는 빌드 구성(Release/Debug) 디렉토리 아래에 생성될 수 있음
        path: build/${{ matrix.build_config }}/MarketDAQ.exe # 실제 실행 파일 경로 확인 필요